{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nexport const manageFilters = createAsyncThunk('filters/manageFilters', async (vars, {\n  rejectWithValue\n}) => {\n  const params = new URLSearchParams({\n    action: vars.action,\n    username: vars.username,\n    id: vars.id,\n    filter_type: vars.filter_type,\n    filter_size: vars.filter_size,\n    notes: vars.notes,\n    count: vars.count,\n    par: vars.par,\n    storage: vars.storage,\n    pn: vars.pn\n  });\n  try {\n    const response = await fetch(`${process.env.REACT_APP_PY_SERVER}/manageFilters?${params.toString()}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","manageFilters","vars","rejectWithValue","params","URLSearchParams","action","username","id","filter_type","filter_size","notes","count","par","storage","pn","response","fetch","process","env","REACT_APP_PY_SERVER","toString","method","headers","ok","Error","result","json","error","message"],"sources":["C:/xampp/htdocs/fm_react_mysql/src/thunks/filtersThunk.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const manageFilters = createAsyncThunk(\r\n    'filters/manageFilters',\r\n    async (vars, { rejectWithValue }) => {\r\n\r\n        const params = new URLSearchParams({\r\n            action: vars.action,\r\n            username: vars.username,\r\n            id: vars.id,\r\n            filter_type: vars.filter_type,\r\n            filter_size: vars.filter_size,\r\n            notes:vars.notes,\r\n            count:vars.count,\r\n            par:vars.par,\r\n            storage:vars.storage,\r\n            pn:vars.pn\r\n        });\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_PY_SERVER}/manageFilters?${params.toString()}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const result = await response.json();\r\n            return result;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AAEnD,OAAO,MAAMC,aAAa,GAAGD,gBAAgB,CACzC,uBAAuB,EACvB,OAAOE,IAAI,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAEjC,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC;IAC/BC,MAAM,EAAEJ,IAAI,CAACI,MAAM;IACnBC,QAAQ,EAAEL,IAAI,CAACK,QAAQ;IACvBC,EAAE,EAAEN,IAAI,CAACM,EAAE;IACXC,WAAW,EAAEP,IAAI,CAACO,WAAW;IAC7BC,WAAW,EAAER,IAAI,CAACQ,WAAW;IAC7BC,KAAK,EAACT,IAAI,CAACS,KAAK;IAChBC,KAAK,EAACV,IAAI,CAACU,KAAK;IAChBC,GAAG,EAACX,IAAI,CAACW,GAAG;IACZC,OAAO,EAACZ,IAAI,CAACY,OAAO;IACpBC,EAAE,EAACb,IAAI,CAACa;EACZ,CAAC,CAAC;EAEF,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB,kBAAkBhB,MAAM,CAACiB,QAAQ,CAAC,CAAC,EAAE,EAAE;MAClGC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOzB,eAAe,CAACyB,KAAK,CAACC,OAAO,CAAC;EACzC;AACJ,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}