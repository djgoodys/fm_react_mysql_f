{"ast":null,"code":"import{createAsyncThunk}from'@reduxjs/toolkit';export const manageEquipment=createAsyncThunk('equipment/manageEquipment',async(vars,_ref)=>{let{rejectWithValue}=_ref;const params=new URLSearchParams({action:vars.action,unit_id:vars.unit_id,rotation:vars.rotation,filter_type:vars.filter_type,username:vars.username,searchwords:vars.searchwords,sortby:vars.sortby,notes:vars.notes,field:vars.field});try{const response=await fetch(\"\".concat(process.env.REACT_APP_PY_SERVER,\"/manageEquipment?\").concat(params.toString(),\"&newtasks=\").concat(vars.task_array),{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json'}});if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();return data;}catch(error){return rejectWithValue(\"ERROR FROM listEquipmentThunk, \".concat(error.message));}});","map":{"version":3,"names":["createAsyncThunk","manageEquipment","vars","_ref","rejectWithValue","params","URLSearchParams","action","unit_id","rotation","filter_type","username","searchwords","sortby","notes","field","response","fetch","concat","process","env","REACT_APP_PY_SERVER","toString","task_array","method","headers","ok","Error","data","json","error","message"],"sources":["C:/xampp/htdocs/fm_react_mysql/src/thunks/listEquipmentThunk.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const manageEquipment = createAsyncThunk(\r\n    'equipment/manageEquipment',\r\n    async (vars, { rejectWithValue }) => {\r\n        const params = new URLSearchParams({\r\n            action: vars.action,\r\n            unit_id: vars.unit_id,\r\n            rotation: vars.rotation,\r\n            filter_type: vars.filter_type,\r\n            username: vars.username,\r\n            searchwords: vars.searchwords,\r\n            sortby: vars.sortby,\r\n            notes: vars.notes,\r\n            field: vars.field,\r\n        });\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_PY_SERVER}/manageEquipment?${params.toString()}&newtasks=${vars.task_array}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(`ERROR FROM listEquipmentThunk, ${error.message}`);\r\n        }\r\n    }\r\n);\r\n"],"mappings":"AAAA,OAASA,gBAAgB,KAAQ,kBAAkB,CAEnD,MAAO,MAAM,CAAAC,eAAe,CAAGD,gBAAgB,CAC3C,2BAA2B,CAC3B,MAAOE,IAAI,CAAAC,IAAA,GAA0B,IAAxB,CAAEC,eAAgB,CAAC,CAAAD,IAAA,CAC5B,KAAM,CAAAE,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CAC/BC,MAAM,CAAEL,IAAI,CAACK,MAAM,CACnBC,OAAO,CAAEN,IAAI,CAACM,OAAO,CACrBC,QAAQ,CAAEP,IAAI,CAACO,QAAQ,CACvBC,WAAW,CAAER,IAAI,CAACQ,WAAW,CAC7BC,QAAQ,CAAET,IAAI,CAACS,QAAQ,CACvBC,WAAW,CAAEV,IAAI,CAACU,WAAW,CAC7BC,MAAM,CAAEX,IAAI,CAACW,MAAM,CACnBC,KAAK,CAAEZ,IAAI,CAACY,KAAK,CACjBC,KAAK,CAAEb,IAAI,CAACa,KAChB,CAAC,CAAC,CAEF,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIC,OAAO,CAACC,GAAG,CAACC,mBAAmB,sBAAAH,MAAA,CAAoBb,MAAM,CAACiB,QAAQ,CAAC,CAAC,eAAAJ,MAAA,CAAahB,IAAI,CAACqB,UAAU,EAAI,CAChIC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACL,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAC,CAEF,GAAI,CAACT,QAAQ,CAACU,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAClD,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAZ,QAAQ,CAACa,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CACf,CAAE,MAAOE,KAAK,CAAE,CACZ,MAAO,CAAA1B,eAAe,mCAAAc,MAAA,CAAmCY,KAAK,CAACC,OAAO,CAAE,CAAC,CAC7E,CACJ,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}