{"ast":null,"code":"import{createAsyncThunk}from'@reduxjs/toolkit';export const manageFilters=createAsyncThunk('filters/manageFilters',async(vars,_ref)=>{let{rejectWithValue}=_ref;const params=new URLSearchParams({action:vars.action,username:vars.username,id:vars.id,filter_type:vars.filter_type,filter_size:vars.filter_size,notes:vars.notes,count:vars.count,par:vars.par,storage:vars.storage,pn:vars.pn});try{const response=await fetch(\"\".concat(process.env.REACT_APP_PY_SERVER,\"/manageFilters?\").concat(params.toString()),{method:'GET',headers:{'Content-Type':'application/json'}});if(!response.ok){throw new Error('Network response was not ok');}const result=await response.json();return result;}catch(error){return rejectWithValue(error.message);}});","map":{"version":3,"names":["createAsyncThunk","manageFilters","vars","_ref","rejectWithValue","params","URLSearchParams","action","username","id","filter_type","filter_size","notes","count","par","storage","pn","response","fetch","concat","process","env","REACT_APP_PY_SERVER","toString","method","headers","ok","Error","result","json","error","message"],"sources":["C:/xampp/htdocs/fm_react_mysql_f/src/thunks/filtersThunk.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const manageFilters = createAsyncThunk(\r\n    'filters/manageFilters',\r\n    async (vars, { rejectWithValue }) => {\r\n\r\n        const params = new URLSearchParams({\r\n            action: vars.action,\r\n            username: vars.username,\r\n            id: vars.id,\r\n            filter_type: vars.filter_type,\r\n            filter_size: vars.filter_size,\r\n            notes:vars.notes,\r\n            count:vars.count,\r\n            par:vars.par,\r\n            storage:vars.storage,\r\n            pn:vars.pn\r\n        });\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_PY_SERVER}/manageFilters?${params.toString()}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const result = await response.json();\r\n            return result;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\n"],"mappings":"AAAA,OAASA,gBAAgB,KAAQ,kBAAkB,CAEnD,MAAO,MAAM,CAAAC,aAAa,CAAGD,gBAAgB,CACzC,uBAAuB,CACvB,MAAOE,IAAI,CAAAC,IAAA,GAA0B,IAAxB,CAAEC,eAAgB,CAAC,CAAAD,IAAA,CAE5B,KAAM,CAAAE,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CAC/BC,MAAM,CAAEL,IAAI,CAACK,MAAM,CACnBC,QAAQ,CAAEN,IAAI,CAACM,QAAQ,CACvBC,EAAE,CAAEP,IAAI,CAACO,EAAE,CACXC,WAAW,CAAER,IAAI,CAACQ,WAAW,CAC7BC,WAAW,CAAET,IAAI,CAACS,WAAW,CAC7BC,KAAK,CAACV,IAAI,CAACU,KAAK,CAChBC,KAAK,CAACX,IAAI,CAACW,KAAK,CAChBC,GAAG,CAACZ,IAAI,CAACY,GAAG,CACZC,OAAO,CAACb,IAAI,CAACa,OAAO,CACpBC,EAAE,CAACd,IAAI,CAACc,EACZ,CAAC,CAAC,CAEF,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIC,OAAO,CAACC,GAAG,CAACC,mBAAmB,oBAAAH,MAAA,CAAkBd,MAAM,CAACkB,QAAQ,CAAC,CAAC,EAAI,CAClGC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAC,CACF,GAAI,CAACR,QAAQ,CAACS,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAClD,CACA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAX,QAAQ,CAACY,IAAI,CAAC,CAAC,CACpC,MAAO,CAAAD,MAAM,CACjB,CAAE,MAAOE,KAAK,CAAE,CACZ,MAAO,CAAA1B,eAAe,CAAC0B,KAAK,CAACC,OAAO,CAAC,CACzC,CACJ,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}