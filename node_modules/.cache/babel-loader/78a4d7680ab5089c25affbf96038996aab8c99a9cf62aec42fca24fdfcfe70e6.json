{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { manageFilterTypes } from '../thunks/filterTypesThunk';\nconst initialState = {\n  loading: false,\n  filterTypes: [],\n  error: ''\n};\nconst filterTypesSlice = createSlice({\n  name: 'filterTypes',\n  initialState,\n  reducers: {\n    // Synchronous reducers go here if needed\n  },\n  extraReducers: builder => {\n    builder.addCase(manageFilterTypes.pending, state => {\n      state.loading = true;\n    }).addCase(manageFilterTypes.fulfilled, (state, action) => {\n      state.loading = false;\n      state.filterTypes = action.payload;\n      state.error = '';\n    }).addCase(manageFilterTypes.rejected, (state, action) => {\n      state.loading = false;\n      state.filterTypes = [];\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  reducer: filterTypesReducer\n} = filterTypesSlice;\nexport default filterTypesSlice.reducer;","map":{"version":3,"names":["createSlice","manageFilterTypes","initialState","loading","filterTypes","error","filterTypesSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer","filterTypesReducer"],"sources":["C:/xampp/htdocs/fm_react_mysql_f/src/reducers/filterTypesSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { manageFilterTypes } from '../thunks/filterTypesThunk';\r\n\r\nconst initialState = { \r\n    loading: false, \r\n    filterTypes: [], \r\n    error: ''\r\n};\r\n\r\nconst filterTypesSlice = createSlice({\r\n    name: 'filterTypes',\r\n    initialState,\r\n    reducers: {\r\n        // Synchronous reducers go here if needed\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(manageFilterTypes.pending, (state) => {\r\n                state.loading = true;\r\n            })\r\n            .addCase(manageFilterTypes.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.filterTypes = action.payload;\r\n                state.error = '';\r\n            })\r\n            .addCase(manageFilterTypes.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.filterTypes = [];\r\n                state.error = action.error.message;\r\n            });\r\n    },\r\n});\r\n\r\nexport const { reducer: filterTypesReducer } = filterTypesSlice;\r\nexport default filterTypesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,iBAAiB,QAAQ,4BAA4B;AAE9D,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE,KAAK;EACdC,WAAW,EAAE,EAAE;EACfC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,gBAAgB,GAAGN,WAAW,CAAC;EACjCO,IAAI,EAAE,aAAa;EACnBL,YAAY;EACZM,QAAQ,EAAE;IACN;EAAA,CACH;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACV,iBAAiB,CAACW,OAAO,EAAGC,KAAK,IAAK;MAC3CA,KAAK,CAACV,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC,CACDQ,OAAO,CAACV,iBAAiB,CAACa,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACrDF,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACT,WAAW,GAAGW,MAAM,CAACC,OAAO;MAClCH,KAAK,CAACR,KAAK,GAAG,EAAE;IACpB,CAAC,CAAC,CACDM,OAAO,CAACV,iBAAiB,CAACgB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACT,WAAW,GAAG,EAAE;MACtBS,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACV,KAAK,CAACa,OAAO;IACtC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC,OAAO,EAAEC;AAAmB,CAAC,GAAGd,gBAAgB;AAC/D,eAAeA,gBAAgB,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}