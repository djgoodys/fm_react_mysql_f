{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { manageTasks } from '../thunks/tasksThunk';\nconst initialState = {\n  loading: false,\n  tasks: [],\n  error: ''\n};\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    // Synchronous reducers go here if needed\n  },\n  extraReducers: builder => {\n    builder.addCase(manageTasks.pending, state => {\n      state.loading = true;\n    }).addCase(manageTasks.fulfilled, (state, action) => {\n      state.loading = false;\n      state.tasks = action.payload;\n      state.error = '';\n    }).addCase(manageTasks.rejected, (state, action) => {\n      state.loading = false;\n      state.tasks = [];\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  reducer: tasksReducer\n} = tasksSlice;\nexport default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","manageTasks","initialState","loading","tasks","error","tasksSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer","tasksReducer"],"sources":["C:/xampp/htdocs/fm_react_mysql_f/src/reducers/tasksSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { manageTasks } from '../thunks/tasksThunk';\r\n\r\nconst initialState = { \r\n    loading: false, \r\n    tasks: [], \r\n    error: ''\r\n};\r\n\r\nconst tasksSlice = createSlice({\r\n    name: 'tasks',\r\n    initialState,\r\n    reducers: {\r\n        // Synchronous reducers go here if needed\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(manageTasks.pending, (state) => {\r\n                state.loading = true;\r\n            })\r\n            .addCase(manageTasks.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.tasks = action.payload;\r\n                state.error = '';\r\n            })\r\n            .addCase(manageTasks.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.tasks = [];\r\n                state.error = action.error.message;\r\n            });\r\n    },\r\n});\r\n\r\nexport const { reducer: tasksReducer } = tasksSlice;\r\nexport default tasksSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,sBAAsB;AAElD,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,UAAU,GAAGN,WAAW,CAAC;EAC3BO,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE;IACN;EAAA,CACH;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACV,WAAW,CAACW,OAAO,EAAGC,KAAK,IAAK;MACrCA,KAAK,CAACV,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC,CACDQ,OAAO,CAACV,WAAW,CAACa,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACT,KAAK,GAAGW,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACR,KAAK,GAAG,EAAE;IACpB,CAAC,CAAC,CACDM,OAAO,CAACV,WAAW,CAACgB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC9CF,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACT,KAAK,GAAG,EAAE;MAChBS,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACV,KAAK,CAACa,OAAO;IACtC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC,OAAO,EAAEC;AAAa,CAAC,GAAGd,UAAU;AACnD,eAAeA,UAAU,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}