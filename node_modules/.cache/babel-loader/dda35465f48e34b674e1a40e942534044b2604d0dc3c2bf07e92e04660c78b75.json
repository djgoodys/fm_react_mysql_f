{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\fm_react_mysql\\\\src\\\\components\\\\Filtersdone.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport '../css/fm.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { manageEquipment } from '../thunks/listEquipmentThunk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filtersdone = ({\n  unit_id = \"000\",\n  rotation = 1,\n  filter_types\n}) => {\n  _s();\n  const [isChecked, setIsChecked] = useState(false);\n  const [ckFiltersDoneClass, setckFiltersDoneClass] = useState(\"switch\");\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.loading);\n  const error = useSelector(state => state.error);\n  const [slctFilter, setSlctFilter] = useState();\n  const refslctFilter = useRef(null);\n  const userName = localStorage.getItem('username');\n  const [showTypes, setShowTypes] = useState(false);\n  function filtersDone(event) {\n    setShowTypes(false);\n    setIsChecked(event.target.checked);\n  }\n  function setFiltersDone() {\n    setShowTypes(false);\n    const backup_folder = localStorage.getItem(\"backup_folder\");\n    const username = localStorage.getItem(\"username\");\n    const vars = {\n      backup_folder: backup_folder,\n      action: \"filtersdone\",\n      unit_id: unit_id,\n      rotation: rotation,\n      filter_type: refslctFilter.current.value,\n      username: username\n    };\n    const ret = dispatch(manageEquipment(vars)).then(response => {\n      //console.log(\"data = \"+response.payload.equipment); \n    }).then(data => {\n      console.log(\"FROM DATATABLE \" + data[\"equipment\"][0]);\n      //data = data\n    }).catch(error => {\n      console.error('Fetch error:', error); // Handle any errors\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: showTypes ? \"switch-invisible\" : \"switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"ckShowFilterTypes\",\n        onClick: () => setShowTypes(true),\n        checked: isChecked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"slct-filter-type\",\n        value: slctFilter,\n        ref: refslctFilter,\n        style: {\n          display: showTypes ? \"block\" : \"none\"\n        },\n        onChange: event => {\n          setSlctFilter(event.target.value);\n          setFiltersDone();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          selected: true,\n          children: \"Select Filter Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), filter_types.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Filtersdone, \"ZHkxEnyRw7T0R7dLAo49lIBtRdk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Filtersdone;\nexport default Filtersdone;\nvar _c;\n$RefreshReg$(_c, \"Filtersdone\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","useDispatch","useSelector","manageEquipment","jsxDEV","_jsxDEV","Filtersdone","unit_id","rotation","filter_types","_s","isChecked","setIsChecked","ckFiltersDoneClass","setckFiltersDoneClass","dispatch","loading","state","error","slctFilter","setSlctFilter","refslctFilter","userName","localStorage","getItem","showTypes","setShowTypes","filtersDone","event","target","checked","setFiltersDone","backup_folder","username","vars","action","filter_type","current","value","ret","then","response","data","console","log","catch","children","className","type","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","display","onChange","disabled","selected","map","item","index","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/fm_react_mysql/src/components/Filtersdone.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport '../css/fm.css';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { manageEquipment } from '../thunks/listEquipmentThunk';\r\n\r\nconst Filtersdone = ({ unit_id = \"000\", rotation = 1, filter_types }) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [ckFiltersDoneClass, setckFiltersDoneClass] = useState(\"switch\")\r\n  const dispatch = useDispatch()\r\n  const loading = useSelector(state => state.loading);\r\n  const error = useSelector(state => state.error);\r\n  const [slctFilter, setSlctFilter] = useState()\r\n  const refslctFilter = useRef(null)\r\n  const userName = localStorage.getItem('username')\r\n  const [showTypes, setShowTypes] = useState(false)\r\n\r\n  function filtersDone(event) {\r\n    setShowTypes(false);\r\n    setIsChecked(event.target.checked);\r\n  }\r\n\r\n\r\n  function setFiltersDone() {\r\n    setShowTypes(false)\r\n    const backup_folder = localStorage.getItem(\"backup_folder\")\r\n    const username = localStorage.getItem(\"username\")\r\n    const vars = \r\n    {\r\n      backup_folder:backup_folder,\r\n      action:\"filtersdone\",\r\n      unit_id:unit_id,\r\n      rotation:rotation,\r\n      filter_type:refslctFilter.current.value,\r\n      username:username\r\n    }\r\n    const ret = dispatch(manageEquipment(vars))\r\n  .then((response) => {\r\n    //console.log(\"data = \"+response.payload.equipment); \r\n  })\r\n  .then(data => { \r\n    console.log(\"FROM DATATABLE \"+data[\"equipment\"][0]); \r\n    //data = data\r\n  })\r\n  .catch((error) => {\r\n    console.error('Fetch error:', error); // Handle any errors\r\n  });\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <label className={showTypes ?  \"switch-invisible\" : \"switch\"}>\r\n        <input type=\"checkbox\" id=\"ckShowFilterTypes\" onClick={()=>setShowTypes(true)} checked={isChecked} />\r\n        <span className=\"slider round\"></span>\r\n      </label>\r\n      <div>\r\n        <select id=\"slct-filter-type\" value={slctFilter} ref={refslctFilter}\r\n          style={{display:showTypes ? \"block\":\"none\"}}\r\n          onChange={(event) => {\r\n            setSlctFilter(event.target.value);\r\n            setFiltersDone()\r\n          }}\r\n        >\r\n          <option disabled selected>Select Filter Type</option>\r\n          {filter_types.map((item, index) => (\r\n            <option key={index}>{item}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filtersdone"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}