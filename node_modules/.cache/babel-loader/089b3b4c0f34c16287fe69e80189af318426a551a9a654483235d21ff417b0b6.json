{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nexport const manageEquipment = createAsyncThunk('equipment/manageEquipment', async (vars, {\n  rejectWithValue\n}) => {\n  const params = new URLSearchParams({\n    action: vars.action,\n    unit_id: vars.unit_id,\n    rotation: vars.rotation,\n    filter_type: vars.filter_type,\n    username: vars.username,\n    newtasks: vars.task_array,\n    searchwords: vars.searchwords,\n    sortby: vars.sortby,\n    notes: vars.notes,\n    field: vars.field\n  });\n  try {\n    console.log(\"FROM listEquipmentThunk, all the tasks=\" + vars.task_array);\n    const response = await fetch(`${process.env.REACT_APP_PY_SERVER}/manageEquipment?${params.toString()}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(`ERROR FROM listEquipmentThunk, ${error.message}`);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","manageEquipment","vars","rejectWithValue","params","URLSearchParams","action","unit_id","rotation","filter_type","username","newtasks","task_array","searchwords","sortby","notes","field","console","log","response","fetch","process","env","REACT_APP_PY_SERVER","toString","method","headers","ok","Error","data","json","error","message"],"sources":["C:/xampp/htdocs/fm_react_mysql/src/thunks/listEquipmentThunk.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const manageEquipment = createAsyncThunk(\r\n    'equipment/manageEquipment',\r\n    async (vars, { rejectWithValue }) => {\r\n        const params = new URLSearchParams({\r\n            action: vars.action,\r\n            unit_id: vars.unit_id,\r\n            rotation: vars.rotation,\r\n            filter_type: vars.filter_type,\r\n            username: vars.username,\r\n            newtasks: vars.task_array,\r\n            searchwords: vars.searchwords,\r\n            sortby: vars.sortby,\r\n            notes: vars.notes,\r\n            field: vars.field,\r\n        });\r\n\r\n        try {\r\n            console.log(\"FROM listEquipmentThunk, all the tasks=\"+ vars.task_array)\r\n            const response = await fetch(`${process.env.REACT_APP_PY_SERVER}/manageEquipment?${params.toString()}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(`ERROR FROM listEquipmentThunk, ${error.message}`);\r\n        }\r\n    }\r\n);\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AAEnD,OAAO,MAAMC,eAAe,GAAGD,gBAAgB,CAC3C,2BAA2B,EAC3B,OAAOE,IAAI,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACjC,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC;IAC/BC,MAAM,EAAEJ,IAAI,CAACI,MAAM;IACnBC,OAAO,EAAEL,IAAI,CAACK,OAAO;IACrBC,QAAQ,EAAEN,IAAI,CAACM,QAAQ;IACvBC,WAAW,EAAEP,IAAI,CAACO,WAAW;IAC7BC,QAAQ,EAAER,IAAI,CAACQ,QAAQ;IACvBC,QAAQ,EAAET,IAAI,CAACU,UAAU;IACzBC,WAAW,EAAEX,IAAI,CAACW,WAAW;IAC7BC,MAAM,EAAEZ,IAAI,CAACY,MAAM;IACnBC,KAAK,EAAEb,IAAI,CAACa,KAAK;IACjBC,KAAK,EAAEd,IAAI,CAACc;EAChB,CAAC,CAAC;EAEF,IAAI;IACAC,OAAO,CAACC,GAAG,CAAC,yCAAyC,GAAEhB,IAAI,CAACU,UAAU,CAAC;IACvE,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB,oBAAoBnB,MAAM,CAACoB,QAAQ,CAAC,CAAC,EAAE,EAAE;MACpGC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAO5B,eAAe,CAAC,kCAAkC4B,KAAK,CAACC,OAAO,EAAE,CAAC;EAC7E;AACJ,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}