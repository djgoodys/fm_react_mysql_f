{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { Login } from '../thunks/loginThunk';\nimport { Logout } from '../thunks/logoutThunk';\nconst initialState = {\n  loggedIn: false,\n  loading: false,\n  userData: [],\n  error: ''\n};\nconst userLoginSlice = createSlice({\n  name: 'userData',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(Login.pending, state => {\n      state.loading = true;\n    }).addCase(Login.fulfilled, (state, action) => {\n      state.loading = false;\n      state.userData = action.payload;\n      if (action.payload.login === \"passed\") {\n        state.loggedIn = true;\n        localStorage.setItem(\"username\", action.payload.user_name);\n      }\n      state.error = '';\n    }).addCase(Login.rejected, (state, action) => {\n      state.loading = false;\n      state.userData = [];\n      state.error = action.error.message;\n    }).addCase(Logout.fulfilled, (state, action) => {\n      state.loggedIn = false;\n      state.userData = null;\n      state.backupFolder = null;\n    });\n  }\n});\nexport default userLoginSlice.reducer;","map":{"version":3,"names":["createSlice","Login","Logout","initialState","loggedIn","loading","userData","error","userLoginSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","login","localStorage","setItem","user_name","rejected","message","backupFolder","reducer"],"sources":["C:/xampp/htdocs/fm_react_mysql_f/src/reducers/userLoginReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { Login } from '../thunks/loginThunk';\r\nimport { Logout } from '../thunks/logoutThunk'\r\n\r\nconst initialState = { \r\n    loggedIn: false,\r\n    loading: false, \r\n    userData: [],\r\n    error:'' \r\n}\r\n\r\nconst userLoginSlice = createSlice({\r\n  name: 'userData',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(Login.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(Login.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.userData = action.payload;\r\n\r\n        if(action.payload.login ===\"passed\"){\r\n          state.loggedIn = true\r\n          localStorage.setItem(\"username\", action.payload.user_name)\r\n        }\r\n        state.error = ''\r\n      })\r\n      .addCase(Login.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.userData = []\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(Logout.fulfilled, (state, action) => {\r\n        state.loggedIn = false\r\n        state.userData = null\r\n        state.backupFolder = null\r\n\r\n      });\r\n  },\r\n});\r\n\r\nexport default userLoginSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,sBAAsB;AAC5C,SAASC,MAAM,QAAQ,uBAAuB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,KAAK;EACfC,OAAO,EAAE,KAAK;EACdC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAC;AACV,CAAC;AAED,MAAMC,cAAc,GAAGR,WAAW,CAAC;EACjCS,IAAI,EAAE,UAAU;EAChBN,YAAY;EACZO,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACZ,KAAK,CAACa,OAAO,EAAGC,KAAK,IAAK;MACjCA,KAAK,CAACV,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDQ,OAAO,CAACZ,KAAK,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC3CF,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACT,QAAQ,GAAGW,MAAM,CAACC,OAAO;MAE/B,IAAGD,MAAM,CAACC,OAAO,CAACC,KAAK,KAAI,QAAQ,EAAC;QAClCJ,KAAK,CAACX,QAAQ,GAAG,IAAI;QACrBgB,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEJ,MAAM,CAACC,OAAO,CAACI,SAAS,CAAC;MAC5D;MACAP,KAAK,CAACR,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC,CACDM,OAAO,CAACZ,KAAK,CAACsB,QAAQ,EAAE,CAACR,KAAK,EAAEE,MAAM,KAAK;MAC1CF,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACT,QAAQ,GAAG,EAAE;MACnBS,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACV,KAAK,CAACiB,OAAO;IACpC,CAAC,CAAC,CACDX,OAAO,CAACX,MAAM,CAACc,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC5CF,KAAK,CAACX,QAAQ,GAAG,KAAK;MACtBW,KAAK,CAACT,QAAQ,GAAG,IAAI;MACrBS,KAAK,CAACU,YAAY,GAAG,IAAI;IAE3B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAejB,cAAc,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}