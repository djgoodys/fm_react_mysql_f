{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\fm_react_mysql\\\\src\\\\components\\\\Bydate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { manageEquipment } from '../thunks/listEquipmentThunk';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bydate = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [isActive, setActive] = useState(false);\n  const [data, setData] = useState([]);\n  const [serverResponse, setServerResponse] = useState('');\n  const toggleClass = () => {\n    setActive(!isActive);\n  };\n  function sort(sortType) {\n    const backup_folder = localStorage.getItem(\"backup_folder\");\n    const obj = {\n      action: \"sort\",\n      backup_folder: backup_folder,\n      sortby: sortType\n    };\n    dispatch(manageEquipment(obj));\n\n    // fetch('http://localhost/filtermanagerreact/php/ListEquipment.php?sort=' + sortType, {\n    //   method: 'POST',\n    //   credentials: 'include'\n    // })\n    //   .then(response => {\n    //     if (!response.ok) {\n    //       throw new Error('Network response was not ok ' + response.statusText);\n    //     }\n    //     return response.text();\n    //   })\n    //   .then(data => {\n    //     let xdata = JSON.parse(data);\n    //     setData(xdata);\n\n    //   })\n    //   .catch(error => {\n    //     console.log('Fetch Error:', error); // Log any fetch errors\n    //     setServerResponse('An error occurred: ' + error.message);\n    //   })\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Bydate-container\",\n    onClick: toggleClass,\n    children: [\"By date\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isActive ? 'openNav' : 'closeNav',\n      id: \"nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-item\",\n        onClick: () => {\n          sort('ASC');\n        },\n        children: \"Newest to oldest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-item\",\n        onClick: () => {\n          sort('DESC');\n        },\n        children: \"Oldest to newest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-item\",\n        onClick: () => {\n          sort('today');\n        },\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-item\",\n        onClick: () => {\n          sort('NORMAL');\n        },\n        children: \"Normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Bydate, \"FtngcHAOqJqN7LHmTPG6oypSGlc=\", false, function () {\n  return [useDispatch];\n});\n_c = Bydate;\nexport default Bydate;\nvar _c;\n$RefreshReg$(_c, \"Bydate\");","map":{"version":3,"names":["React","useState","manageEquipment","useDispatch","jsxDEV","_jsxDEV","Bydate","_s","dispatch","isActive","setActive","data","setData","serverResponse","setServerResponse","toggleClass","sort","sortType","backup_folder","localStorage","getItem","obj","action","sortby","className","onClick","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/fm_react_mysql/src/components/Bydate.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { manageEquipment } from '../thunks/listEquipmentThunk';\r\nimport { useDispatch} from 'react-redux'\r\n\r\nconst Bydate = () => {\r\n  const dispatch = useDispatch()\r\n  const [isActive, setActive] = useState(false);\r\n  const [data, setData] = useState([])\r\n  const[serverResponse, setServerResponse] = useState('')\r\n  const toggleClass = () => {\r\n    setActive(!isActive);\r\n  };\r\n\r\n  function sort(sortType) {\r\n    const backup_folder=localStorage.getItem(\"backup_folder\")\r\n    const obj={\r\n      action:\"sort\",\r\n      backup_folder:backup_folder,\r\n      sortby:sortType\r\n    }\r\n    dispatch(manageEquipment(obj))\r\n\r\n    // fetch('http://localhost/filtermanagerreact/php/ListEquipment.php?sort=' + sortType, {\r\n    //   method: 'POST',\r\n    //   credentials: 'include'\r\n    // })\r\n    //   .then(response => {\r\n    //     if (!response.ok) {\r\n    //       throw new Error('Network response was not ok ' + response.statusText);\r\n    //     }\r\n    //     return response.text();\r\n    //   })\r\n    //   .then(data => {\r\n    //     let xdata = JSON.parse(data);\r\n    //     setData(xdata);\r\n\r\n    //   })\r\n    //   .catch(error => {\r\n    //     console.log('Fetch Error:', error); // Log any fetch errors\r\n    //     setServerResponse('An error occurred: ' + error.message);\r\n    //   })\r\n  }\r\n\r\n  return (\r\n    <div className=\"Bydate-container\" onClick={toggleClass} >By date\r\n      <div className={isActive ? 'openNav' : 'closeNav'} id=\"nav\">\r\n        <div className=\"nav-item\" onClick={() => { sort('ASC') }}>Newest to oldest</div>\r\n        <div className=\"nav-item\" onClick={() => { sort('DESC') }}>Oldest to newest</div>\r\n        <div className=\"nav-item\" onClick={() => { sort('today') }}>Today</div>\r\n        <div className=\"nav-item\" onClick={() => { sort('NORMAL') }}>Normal</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bydate"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,8BAA8B;AAC9D,SAASC,WAAW,QAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,QAAQ,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAK,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACvD,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBL,SAAS,CAAC,CAACD,QAAQ,CAAC;EACtB,CAAC;EAED,SAASO,IAAIA,CAACC,QAAQ,EAAE;IACtB,MAAMC,aAAa,GAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IACzD,MAAMC,GAAG,GAAC;MACRC,MAAM,EAAC,MAAM;MACbJ,aAAa,EAACA,aAAa;MAC3BK,MAAM,EAACN;IACT,CAAC;IACDT,QAAQ,CAACN,eAAe,CAACmB,GAAG,CAAC,CAAC;;IAE9B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;EACF;EAEA,oBACEhB,OAAA;IAAKmB,SAAS,EAAC,kBAAkB;IAACC,OAAO,EAAEV,WAAY;IAAAW,QAAA,GAAE,SACvD,eAAArB,OAAA;MAAKmB,SAAS,EAAEf,QAAQ,GAAG,SAAS,GAAG,UAAW;MAACkB,EAAE,EAAC,KAAK;MAAAD,QAAA,gBACzDrB,OAAA;QAAKmB,SAAS,EAAC,UAAU;QAACC,OAAO,EAAEA,CAAA,KAAM;UAAET,IAAI,CAAC,KAAK,CAAC;QAAC,CAAE;QAAAU,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChF1B,OAAA;QAAKmB,SAAS,EAAC,UAAU;QAACC,OAAO,EAAEA,CAAA,KAAM;UAAET,IAAI,CAAC,MAAM,CAAC;QAAC,CAAE;QAAAU,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjF1B,OAAA;QAAKmB,SAAS,EAAC,UAAU;QAACC,OAAO,EAAEA,CAAA,KAAM;UAAET,IAAI,CAAC,OAAO,CAAC;QAAC,CAAE;QAAAU,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvE1B,OAAA;QAAKmB,SAAS,EAAC,UAAU;QAACC,OAAO,EAAEA,CAAA,KAAM;UAAET,IAAI,CAAC,QAAQ,CAAC;QAAC,CAAE;QAAAU,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAxB,EAAA,CAjDKD,MAAM;EAAA,QACOH,WAAW;AAAA;AAAA6B,EAAA,GADxB1B,MAAM;AAmDZ,eAAeA,MAAM;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}